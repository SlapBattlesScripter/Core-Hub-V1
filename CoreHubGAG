local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()

local Window = Rayfield:CreateWindow({
	Name = "ðŸŒ± Core Hub",
	LoadingTitle = "Grow A Garden GUI",
	LoadingSubtitle = "by blue_s0ul1",
	ConfigurationSaving = {
		Enabled = true,
		FolderName = "GrowAGarden",
		FileName = "GardenConfig"
	},
	Discord = {
		Enabled = false
	},
	KeySystem = false
})

local Tab = Window:CreateTab("Main", 72785174425122)

Tab:CreateButton({
	Name = "Dupe Pet",
	Callback = function()
		local player = game.Players.LocalPlayer
		local char = player.Character or player.CharacterAdded:Wait()
		local root = char:FindFirstChild("HumanoidRootPart")
		if not root then return end

		-- Look for any pet-like model: matches name pattern
		local pet = nil
		for _, child in pairs(char:GetChildren()) do
			if child:IsA("Model") and string.match(child.Name, "%[.-%]") then
				pet = child
				break
			end
		end

		if not pet then
			Rayfield:Notify({
				Title = "Pet Not Found",
				Content = "You must be holding a pet like Crab [2.89KG] [Age 15]",
				Duration = 4,
			})
			return
		end

		-- Clone and resize
		local clone = pet:Clone()
		clone.Name = pet.Name .. "_Clone"

		-- Set PrimaryPart if missing
		if not clone.PrimaryPart then
			for _, part in pairs(clone:GetDescendants()) do
				if part:IsA("BasePart") then
					clone.PrimaryPart = part
					break
				end
			end
		end

		if not clone.PrimaryPart then
			Rayfield:Notify({
				Title = "Clone Failed",
				Content = "Pet has no PrimaryPart.",
				Duration = 4,
			})
			return
		end

		-- Apply random scale (0.8x to 1.5x)
		local scale = math.random(8, 15) / 10
		for _, part in ipairs(clone:GetDescendants()) do
			if part:IsA("BasePart") then
				part.Size = part.Size * scale
				part.Anchored = false
			end
		end

		-- Move it in front of player
		local offset = CFrame.new(0, 0, -5)
		clone:SetPrimaryPartCFrame(root.CFrame * offset)
		clone.Parent = workspace
	end,
})


