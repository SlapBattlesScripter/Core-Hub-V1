local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
	Name = "Core | Hub",
	LoadingTitle = "Core | Hub",
	LoadingSubtitle = "by blue_s0u1 on discord",
	ConfigurationSaving = {
		Enabled = false,
		FolderName = nil,
		FileName = "Core Hub"
	},
	Discord = {
		Enabled = true,
		Invite = "https://discord.gg/zjjuB7cBuj",
		RememberJoins = true
	},
	KeySystem = false,
	KeySettings = {
		Title = "Key | Core Hub",
		Subtitle = "Key System",
		Note = "Key In https://discord.gg/zjjuB7cBuj",
		FileName = "TestKey",
		SaveKey = false,
		GrabKeyFromSite = true,
		Key = {"robloxcore"}
	}
})

local MainTab = Window:CreateTab("üè† Home", nil)
local MainSection = MainTab:CreateSection("Main")

local StarterGui = game:GetService("StarterGui")

StarterGui:SetCore("SendNotification", {
	Title = "Enjoy!",
	Text = "If you have any bugs DM blue_s0ul1 on discord!",
	Duration = 5, -- How long the notification stays on screen
	Icon = "rbxassetid://18931838023" -- Custom image ID
})


local WalkSpeedSlider = MainTab:CreateSlider({
	Name = "WalkSpeed Slider",
	Range = {1, 3500},
	Increment = 1,
	Suffix = "Speed",
	CurrentValue = 16,
	Flag = "sliderws",
	Callback = function(Value)
		game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
	end,
})

local JumpPowerSlider = MainTab:CreateSlider({
	Name = "JumpPower Slider",
	Range = {1, 350},
	Increment = 1,
	Suffix = "Power",
	CurrentValue = 16,
	Flag = "sliderjp",
	Callback = function(Value)
		game.Players.LocalPlayer.Character.Humanoid.JumpPower = Value
	end,
})

local Input = MainTab:CreateInput({
	Name = "Walkspeed",
	PlaceholderText = "1-500",
	RemoveTextAfterFocusLost = true,
	Callback = function(Text)
		local speed = tonumber(Text)
		if speed then
			game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = speed
		end
	end,
})


local EspButton = MainTab:CreateButton({
	Name = "Esp Players Toggle",
	Callback = function()
		_G.espEnabled = not _G.espEnabled

		if _G.espEnabled then
			game.StarterGui:SetCore("SendNotification", {Title="Core Hub"; Text="ESP Players Activated!"; Duration=5;})

			local function createESP(player)
				if player.Character then
					if player.Character:FindFirstChild("ESP_Highlight") then
						player.Character.ESP_Highlight:Destroy()
					end

					local highlight = Instance.new("Highlight")
					highlight.Parent = player.Character
					highlight.Adornee = player.Character
					highlight.FillColor = Color3.new(1, 0, 0) -- Red color for the fill
					highlight.OutlineColor = Color3.new(1, 1, 1) -- White outline
					highlight.FillTransparency = 0.5 -- Semi-transparent fill
					highlight.OutlineTransparency = 0 -- Fully visible outline
					highlight.Name = "ESP_Highlight"
				end
			end

			-- Add ESP to existing players
			for _, player in pairs(game.Players:GetPlayers()) do
				if player ~= game.Players.LocalPlayer then
					createESP(player)
				end
			end

			-- Handle new players joining
			game.Players.PlayerAdded:Connect(function(player)
				player.CharacterAdded:Connect(function()
					createESP(player)
				end)
			end)

			_G.espDisconnect = game:GetService("RunService").RenderStepped:Connect(function()
				if not _G.espEnabled then
					for _, player in pairs(game.Players:GetPlayers()) do
						if player.Character and player.Character:FindFirstChild("ESP_Highlight") then
							player.Character.ESP_Highlight:Destroy()
						end
					end
					if _G.espDisconnect then
						_G.espDisconnect:Disconnect()
						_G.espDisconnect = nil
					end
				end
			end)
		else
			-- Remove all existing ESP highlights
			for _, player in pairs(game.Players:GetPlayers()) do
				if player.Character and player.Character:FindFirstChild("ESP_Highlight") then
					player.Character.ESP_Highlight:Destroy()
				end
			end
		end
	end,
})

local MiscTab = Window:CreateTab("üîÆ Misc", nil)

local MiscSection = MiscTab:CreateSection("Animations")

local PushButton = MiscTab:CreateButton({
	Name = "Push Animation (RESET TO STOP)",
	Callback = function()
		local player = game.Players.LocalPlayer
		local character = player.Character or player.CharacterAdded:Wait()
		local humanoid = character:FindFirstChildOfClass("Humanoid")

		if humanoid then
			local animation = Instance.new("Animation")
			animation.AnimationId = "rbxassetid://16389964118" -- Replace with your animation ID
			local animationTrack = humanoid:LoadAnimation(animation)
			animationTrack:Play()
		else
			warn("Humanoid not found in character!")
		end
	end,
})
local StartButton = MiscTab:CreateButton({
	Name = "Materialze Animation Start",
	Callback = function()
		local player = game.Players.LocalPlayer
		local character = player.Character or player.CharacterAdded:Wait()
		local humanoid = character:FindFirstChildOfClass("Humanoid")

		if humanoid then
			local animation = Instance.new("Animation")
			animation.AnimationId = "rbxassetid://111726999347835" -- Replace with your animation ID
			local animationTrack = humanoid:LoadAnimation(animation)
			animationTrack:Play()
		else
			warn("Humanoid not found in character!")
		end
	end,
})
local BoxerButton = MiscTab:CreateButton({
	Name = "Boxer Animation Idle (RESET TO STOP)",
	Callback = function()
		local player = game.Players.LocalPlayer
		local character = player.Character or player.CharacterAdded:Wait()
		local humanoid = character:FindFirstChildOfClass("Humanoid")

		if humanoid then
			local animation = Instance.new("Animation")
			animation.AnimationId = "rbxassetid://73504680385602" -- Replace with your animation ID
			local animationTrack = humanoid:LoadAnimation(animation)
			animationTrack:Play()
		else
			warn("Humanoid not found in character!")
		end
	end,
})

local LightningButton = MiscTab:CreateButton({
	Name = "Thor Animation",
	Callback = function()
		local player = game.Players.LocalPlayer
		local character = player.Character or player.CharacterAdded:Wait()
		local humanoid = character:FindFirstChildOfClass("Humanoid")

		if humanoid then
			local animation = Instance.new("Animation")
			animation.AnimationId = "rbxassetid://16144838323" -- Replace with your animation ID
			local animationTrack = humanoid:LoadAnimation(animation)
			animationTrack:Play()
		else
			warn("Humanoid not found in character!")
		end
	end,
})
local SpawnButton = MiscTab:CreateButton({
	Name = "Rob Spawn Animation",
	Callback = function()
		local player = game.Players.LocalPlayer
		local character = player.Character or player.CharacterAdded:Wait()
		local humanoid = character:FindFirstChildOfClass("Humanoid")

		if humanoid then
			local animation = Instance.new("Animation")
			animation.AnimationId = "rbxassetid://13675136513" -- Replace with your animation ID
			local animationTrack = humanoid:LoadAnimation(animation)
			animationTrack:Play()
		else
			warn("Humanoid not found in character!")
		end
	end,
})
local JumpButton = MiscTab:CreateButton({
	Name = "Avatar Animation",
	Callback = function()
		local player = game.Players.LocalPlayer
		local character = player.Character or player.CharacterAdded:Wait()
		local humanoid = character:FindFirstChildOfClass("Humanoid")

		if humanoid then
			local animation = Instance.new("Animation")
			animation.AnimationId = "rbxassetid://18506587588" -- Replace with your animation ID 
			local animationTrack = humanoid:LoadAnimation(animation)
			animationTrack:Play()
		else
			warn("Humanoid not found in character!")
		end
	end,
})
local LightningButton = MiscTab:CreateButton({
	Name = "Kinetic Animation",
	Callback = function()
		local player = game.Players.LocalPlayer
		local character = player.Character or player.CharacterAdded:Wait()
		local humanoid = character:FindFirstChildOfClass("Humanoid")

		if humanoid then
			local animation = Instance.new("Animation")
			animation.AnimationId = "rbxassetid://16102418873" -- Replace with your animation ID 
			local animationTrack = humanoid:LoadAnimation(animation)
			animationTrack:Play()
		else
			warn("Humanoid not found in character!")
		end
	end,
})
local CounterButton = MiscTab:CreateButton({
	Name = "Counter Animation",
	Callback = function()
		local player = game.Players.LocalPlayer
		local character = player.Character or player.CharacterAdded:Wait()
		local humanoid = character:FindFirstChildOfClass("Humanoid")

		if humanoid then
			local animation = Instance.new("Animation")
			animation.AnimationId = "rbxassetid://13552944381" -- Replace with your animation ID 
			local animationTrack = humanoid:LoadAnimation(animation)
			animationTrack:Play()
		else
			warn("Humanoid not found in character!")
		end
	end,
})

local CounterButton = MiscTab:CreateButton({
	Name = "Counter Rah Animation",
	Callback = function()
		local player = game.Players.LocalPlayer
		local character = player.Character or player.CharacterAdded:Wait()
		local humanoid = character:FindFirstChildOfClass("Humanoid")

		if humanoid then
			local animation = Instance.new("Animation")
			animation.AnimationId = "rbxassetid://13538759700" -- Replace with your animation ID 
			local animationTrack = humanoid:LoadAnimation(animation)
			animationTrack:Play()
		else
			warn("Humanoid not found in character!")
		end
	end,
})

local CounterButton = MiscTab:CreateButton({
	Name = "Meteor Animation",
	Callback = function()
		local player = game.Players.LocalPlayer
		local character = player.Character or player.CharacterAdded:Wait()
		local humanoid = character:FindFirstChildOfClass("Humanoid")

		if humanoid then
			local animation = Instance.new("Animation")
			animation.AnimationId = "rbxassetid://14772482253" -- Replace with your animation ID 
			local animationTrack = humanoid:LoadAnimation(animation)
			animationTrack:Play()
		else
			warn("Humanoid not found in character!")
		end
	end,
})

local TeleportSection = MiscTab:CreateSection("Teleport")
local TeleportMainIslandButton = MiscTab:CreateButton({
	Name = "Teleport to Main Island",
	Callback = function()
		local mainIslandPosition = Vector3.new(0, 50, 0) -- Adjust this position to match your main island's location
		local player = game.Players.LocalPlayer
		if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
			player.Character.HumanoidRootPart.CFrame = CFrame.new(mainIslandPosition)
		else
			warn("Character or HumanoidRootPart not found!")
		end
	end,
})




local MiscTab = Window:CreateTab("üòÑ Fun Stuff", nil)
local CannonButton = MiscTab:CreateButton({
	Name = "Fireball",
	Callback = function()
		local player = game.Players.LocalPlayer
		local character = player.Character or player.CharacterAdded:Wait()
		local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")

		if humanoidRootPart then
			local cannon = Instance.new("Part")
			cannon.Name = "Cannon"
			cannon.Size = Vector3.new(4, 4, 6)
			cannon.Position = humanoidRootPart.Position + Vector3.new(0, 5, 0)
			cannon.Anchored = false
			cannon.BrickColor = BrickColor.new("Really black")
			cannon.Material = Enum.Material.Metal
			cannon.Parent = workspace

			local fireEffect = Instance.new("Fire")
			fireEffect.Size = 3
			fireEffect.Heat = 10
			fireEffect.Parent = cannon

			local bodyVelocity = Instance.new("BodyVelocity")
			bodyVelocity.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
			bodyVelocity.Velocity = humanoidRootPart.CFrame.LookVector * 50
			bodyVelocity.Parent = cannon

			-- Apply the texture to each side
			local imageId = "rbxassetid://73113467911913"
			for _, face in pairs(Enum.NormalId:GetEnumItems()) do
				local texture = Instance.new("Texture")
				texture.Texture = imageId
				texture.Face = face
				texture.Parent = cannon
			end

			game.Debris:AddItem(cannon, 10) -- Remove the cannon after 10 seconds
		else
			warn("HumanoidRootPart not found, cannon cannot be spawned!")
		end
	end,
})

local function showNotification(title, text, icon, button1, button2, callback)
	game:GetService("StarterGui"):SetCore("SendNotification", {
		Title = title,
		Text = text,
		Icon = icon,
		Duration = 5,
		Button1 = button1,
		Button2 = button2,
		Callback = callback
	})
end

-- Notification Button
MiscTab:CreateButton({
	Name = "Tencell Friend Request",
	Callback = function()
		showNotification("Tencell", "Sent you a friend request", "rbxassetid://9200898038", "Accept", "Decline", function(clicked)
			if clicked == "Accept" then
				-- Show "New Friend" notification when "Accept" is clicked
				showNotification("New Friend", "Tencell", "rbxassetid://9200898038", nil, nil, nil)
			end
		end)
	end
})

MiscTab:CreateButton({
	Name = "Rudy (Nancleox) Friend Request",
	Callback = function()
		showNotification("Nancleox", "Sent you a friend request", "rbxassetid://1466478040", "Accept", "Decline", function(clicked)
			if clicked == "Accept" then
				-- Show "New Friend" notification when "Accept" is clicked
				showNotification("New Friend", "Nancleox", "rbxassetid://1466478040", nil, nil, nil)
			end
		end)
	end
})







local Players = game:GetService("Players")
local playerNames = {"None"} 
local selectedPlayer = nil
local teleporting = false
local teleportConnection = nil

local Dropdown = MainTab:CreateDropdown({
	Name = "Teleport To Players",
	Options = playerNames,
	CurrentOption = "Select Plr",
	MultipleOptions = false,
	Flag = "dropdownarea",
	Callback = function(Option)
		if Option == "None" then
			teleporting = false
			selectedPlayer = nil
			if teleportConnection then
				teleportConnection:Disconnect()
				teleportConnection = nil
			end
		else
			-- Start teleporting to selected player
			selectedPlayer = Players:FindFirstChild(Option)
			if selectedPlayer then
				teleporting = true

				if teleportConnection then
					teleportConnection:Disconnect()
				end

				teleportConnection = game:GetService("RunService").RenderStepped:Connect(function()
					if teleporting and selectedPlayer and selectedPlayer.Character and selectedPlayer.Character:FindFirstChild("HumanoidRootPart") then
						local targetPosition = selectedPlayer.Character.HumanoidRootPart.Position
						local localPlayer = Players.LocalPlayer
						if localPlayer.Character and localPlayer.Character:FindFirstChild("HumanoidRootPart") then
							-- Set local player's position to target's position
							localPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(targetPosition)
						else
							print("Local player's HumanoidRootPart not found")
						end
					else
						print("Target player's HumanoidRootPart not found or teleporting disabled")
					end
				end)
			else
				print("Selected player not found")
			end
		end
	end,
})

local function refreshPlayerDropdown()
	playerNames = {"None"} 

	-- Collect current player names
	for _, player in ipairs(Players:GetPlayers()) do
		table.insert(playerNames, player.Name)
	end

	if Dropdown and Dropdown.Refresh then
		Dropdown:Refresh(playerNames, "None")
	end
end

refreshPlayerDropdown()

Players.PlayerAdded:Connect(refreshPlayerDropdown)
Players.PlayerRemoving:Connect(refreshPlayerDropdown)
